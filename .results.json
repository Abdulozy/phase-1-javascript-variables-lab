{
  "stats": {
    "suites": 4,
    "tests": 6,
    "passes": 4,
    "pending": 0,
    "failures": 2,
    "start": "2022-06-06T12:51:28.534Z",
    "end": "2022-06-06T12:51:29.023Z",
    "duration": 489
  },
  "tests": [
    {
      "title": "is set as Scuber",
      "fullTitle": "index.js companyName is set as Scuber",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "ReferenceError: companyName is not defined\n    at Context.<anonymous> (test/indexTest.js:9:14)\n    at processImmediate (internal/timers.js:461:21)",
        "message": "companyName is not defined"
      }
    },
    {
      "title": "is defined as a const",
      "fullTitle": "index.js companyName is defined as a const",
      "duration": 2,
      "currentRetry": 0,
      "err": {
        "message": "Expected companyName to be a const: expected '// Code your solution in this f\\n\\nlet comapanyName = \\'Scuber\\'\\n\\nlet mostProfitableNeighborhood = \\'Chelsea\\'\\n\\nlet companyCeo = \\'Susan Smith\\'' to match /const companyName/",
        "showDiff": false,
        "actual": "// Code your solution in this f\n\nlet comapanyName = 'Scuber'\n\nlet mostProfitableNeighborhood = 'Chelsea'\n\nlet companyCeo = 'Susan Smith'",
        "stack": "AssertionError: Expected companyName to be a const: expected '// Code your solution in this f\\n\\nlet comapanyName = \\'Scuber\\'\\n\\nlet mostProfitableNeighborhood = \\'Chelsea\\'\\n\\nlet companyCeo = \\'Susan Smith\\'' to match /const companyName/\n    at Context.<anonymous> (test/indexTest.js:13:21)\n    at processImmediate (internal/timers.js:461:21)"
      }
    },
    {
      "title": "is declared as equal to Chelsea",
      "fullTitle": "index.js mostProfitableNeighborhood is declared as equal to Chelsea",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is defined using let",
      "fullTitle": "index.js mostProfitableNeighborhood is defined using let",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is declared as equal to Susan Smith",
      "fullTitle": "index.js companyCeo is declared as equal to Susan Smith",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is defined using let",
      "fullTitle": "index.js companyCeo is defined using let",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    }
  ],
  "pending": [],
  "failures": [
    {
      "title": "is set as Scuber",
      "fullTitle": "index.js companyName is set as Scuber",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "ReferenceError: companyName is not defined\n    at Context.<anonymous> (test/indexTest.js:9:14)\n    at processImmediate (internal/timers.js:461:21)",
        "message": "companyName is not defined"
      }
    },
    {
      "title": "is defined as a const",
      "fullTitle": "index.js companyName is defined as a const",
      "duration": 2,
      "currentRetry": 0,
      "err": {
        "message": "Expected companyName to be a const: expected '// Code your solution in this f\\n\\nlet comapanyName = \\'Scuber\\'\\n\\nlet mostProfitableNeighborhood = \\'Chelsea\\'\\n\\nlet companyCeo = \\'Susan Smith\\'' to match /const companyName/",
        "showDiff": false,
        "actual": "// Code your solution in this f\n\nlet comapanyName = 'Scuber'\n\nlet mostProfitableNeighborhood = 'Chelsea'\n\nlet companyCeo = 'Susan Smith'",
        "stack": "AssertionError: Expected companyName to be a const: expected '// Code your solution in this f\\n\\nlet comapanyName = \\'Scuber\\'\\n\\nlet mostProfitableNeighborhood = \\'Chelsea\\'\\n\\nlet companyCeo = \\'Susan Smith\\'' to match /const companyName/\n    at Context.<anonymous> (test/indexTest.js:13:21)\n    at processImmediate (internal/timers.js:461:21)"
      }
    }
  ],
  "passes": [
    {
      "title": "is declared as equal to Chelsea",
      "fullTitle": "index.js mostProfitableNeighborhood is declared as equal to Chelsea",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is defined using let",
      "fullTitle": "index.js mostProfitableNeighborhood is defined using let",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is declared as equal to Susan Smith",
      "fullTitle": "index.js companyCeo is declared as equal to Susan Smith",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is defined using let",
      "fullTitle": "index.js companyCeo is defined using let",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    }
  ]
}